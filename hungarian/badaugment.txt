        # # find first unmatched node
        # for u in left_nodes:
        #     if u not in matching:
        #         augmenting_path.append(u)
        #         augmenting_path_set.add(u)
        #         break
        # print("Starting with node", u)
        # needsPotentialAdjust = False
        # while True:
        #     curr = augmenting_path[-1]
        #     for _, v, data in G.edges(curr, data=True):
        #         w = data[weight]
        #         if potentials[v] + potentials[curr] == w and v not in augmenting_path_set:
        #             # this edge is visible
        #             augmenting_path.append(v)
        #             augmenting_path_set.add(v)
        #             break
        #     else:
        #         needsPotentialAdjust = True
        #         break
        #     print("Augmenting path", augmenting_path)
        #     if augmenting_path[-1] not in matching:
        #         if augmenting_path[-1] in right_nodes:
        #             # we've found a new augmenting path, and we're good!
        #             break
        #         # else it's on the left side, we must continue to right side
        #     # else, its already matched
        #     # we need to continue no matter what.
        